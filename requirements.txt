torch==1.13.1
torchvision 
torchaudio 
transformers==4.32.1
datasets==2.14.4 # For Hugging Face datasets library if used
torchmetrics==1.0.3
albumentations==1.3.1 # For image augmentations

# Image and Data Handling
Pillow==10.0.0
opencv-python==4.8.0.76
numpy # Often a dependency, good to list
pandas # For data manipulation
scikit-learn # For utilities like train_test_split

# Waymo Data Processing & MMLab Ecosystem
# Note: MMLab components (mmcv, mmdet, mmdet3d, mmengine) have specific PyTorch/CUDA compatibility.
# It's highly recommended to follow the official OpenMMLab installation guide for these.
# https://mmcv.readthedocs.io/en/latest/get_started/installation.html
# https://mmdetection3d.readthedocs.io/en/latest/get_started.html
tensorflow>=2.5.0,<2.12.0 # For Waymo Open Dataset devkit compatibility (e.g., TF 2.11.x for waymo-open-dataset-tf-2-11-0)
waymo-open-dataset-tf-2-11-0 # Or the version compatible with your TensorFlow. Install via pip.
mmengine # Foundational library for OpenMMLab 2.0 projects
mmcv # OpenMMLab Computer Vision foundation library (install mmcv or mmcv-full as per MMLab docs)
mmdet # OpenMMLab Detection Toolbox
mmdet3d # OpenMMLab 3D Detection Toolbox
pycocotools # For COCO-style evaluation and mask utilities (used by MMDetection and data_creator.py)

# API Interaction & Utilities
openai # For VLM condition generation
tqdm # For progress bars

# Experiment Tracking
wandb

# For Jupyter Notebooks (if used for parts of the project)
jupyter
notebook
ipykernel

# Notes:
# 1. PyTorch Installation:
#    The line `torch==1.13.1` assumes a CPU-only or a compatible pre-built CUDA version.
#    For a specific CUDA version (e.g., CUDA 11.7), you might need:
#    pip install torch==1.13.1+cu117 torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu117
#    Adjust based on your system and the PyTorch website.

# 2. MMLab Installation (mmcv, mmdet, mmdet3d, mmengine):
#    These are best installed following the official OpenMMLab guides AFTER PyTorch is installed,
#    as `mmcv` often needs to be compiled against your specific PyTorch and CUDA versions,
#    or you need to pick the correct pre-built wheel.
#    Example for mmcv (check MMLab docs for versions compatible with PyTorch 1.13.1):
#    pip install mmcv==2.0.0 -f https://download.openmmlab.com/mmcv/dist/cu117/torch1.13/index.html
#    Then:
#    pip install mmengine mmdet mmdet3d

# 3. TensorFlow for Waymo:
#    The Waymo Open Dataset DevKit often relies on TensorFlow for reading TFRecord files.
#    Ensure the TensorFlow version is compatible with the `waymo-open-dataset-tf` package you use.
#    The `gt_bin_creator.py` uses `tensorflow.compat.v1`.

# 4. Generating from your environment:
#    Once your environment is fully set up and working, you can generate a precise list using:
#    pip freeze > requirements.txt
#    This will include all transitive dependencies with their exact versions.